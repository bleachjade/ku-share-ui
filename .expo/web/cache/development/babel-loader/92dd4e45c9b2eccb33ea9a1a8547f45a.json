{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Children } from 'react';\nexport var childrenWithOverriddenStyle = function childrenWithOverriddenStyle(children) {\n  return Children.map(children, function (child) {\n    var props = child.props;\n\n    var newProps = _objectSpread(_objectSpread({}, props), {}, {\n      style: [props.style, {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        width: undefined,\n        height: undefined\n      }],\n      collapsable: false\n    });\n\n    return React.cloneElement(child, newProps);\n  });\n};","map":{"version":3,"sources":["utils.tsx"],"names":["childrenWithOverriddenStyle","children","child","props","newProps","style","position","left","top","right","bottom","width","height","undefined","collapsable","React"],"mappings":";;;;;;AAUA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AAEA,OAAO,IAAMA,2BAA2B,GAAIC,SAA/BD,2BAA+BC,CAAAA,QAAD,EAA0B;AAInE,SAAO,QAAQ,CAAR,GAAA,CAAA,QAAA,EAAwBC,UAAAA,KAAD,EAAW;AACvC,QAAQC,KAAR,GAAA,KAAA,CAAQA,KAAR;;AACA,QAAMC,QAAQ,mCAAG,KAAH;AAEZC,MAAAA,KAAK,EAAE,CACLF,KAAK,CADA,KAAA,EAEL;AACEG,QAAAA,QAAQ,EADV,UAAA;AAEEC,QAAAA,IAAI,EAFN,CAAA;AAGEC,QAAAA,GAAG,EAHL,CAAA;AAIEC,QAAAA,KAAK,EAJP,CAAA;AAKEC,QAAAA,MAAM,EALR,CAAA;AAMEC,QAAAA,KAAK,EANP,SAAA;AAOEC,QAAAA,MAAM,EAAEC;AAPV,OAFK,CAFK;AAcZC,MAAAA,WAAW,EAAE;AAdD,MAAd;;AAgBA,WAAOC,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAAP,QAAOA,CAAP;AAlBF,GAAO,CAAP;AAJK,CAAA","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport React, { Children, ReactNode, ReactElement } from 'react';\n\nexport const childrenWithOverriddenStyle = (children?: ReactNode) => {\n  // Override styles so that each page will fill the parent. Native component\n  // will handle positioning of elements, so it's not important to offset\n  // them correctly.\n  return Children.map(children, (child) => {\n    const { props } = child as ReactElement;\n    const newProps = {\n      ...props,\n      style: [\n        props.style,\n        {\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          width: undefined,\n          height: undefined,\n        },\n      ],\n      collapsable: false,\n    };\n    return React.cloneElement(child as ReactElement, newProps);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}