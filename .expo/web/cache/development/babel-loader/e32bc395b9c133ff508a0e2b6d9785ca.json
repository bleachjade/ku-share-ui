{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport InstructionPage from \"./src/screens/InstructionPage\";\nimport Home from \"./src/screens/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route,\n              navigation = _ref.navigation;\n          return _objectSpread({\n            headerShown: false,\n            gestureEnabled: true\n          }, TransitionPresets.ModalPresentationIOS);\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"InstructionPage\",\n          component: InstructionPage\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/Downloads/senior_project/ku-share-ui/App.js"],"names":["React","StatusBar","NavigationContainer","createStackNavigator","TransitionPresets","InstructionPage","Home","Stack","App","route","navigation","headerShown","gestureEnabled","ModalPresentationIOS","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,yBAAxD;AAEA,OAAOC,eAAP;AACA,OAAOC,IAAP;;;;AAGA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAEA,eAAe,SAASK,GAAT,GAAe;AAC5B,SACE;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADF,EAEE,KAAC,mBAAD;AAAA,gBACE,MAAC,KAAD,CAAO,SAAP;AACA,QAAA,aAAa,EAAE;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,cAAUC,UAAV,QAAUA,UAAV;AAAA;AACbC,YAAAA,WAAW,EAAE,KADA;AAEbC,YAAAA,cAAc,EAAE;AAFH,aAGVR,iBAAiB,CAACS,oBAHR;AAAA,SADf;AAAA,mBAME,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,iBAAnB;AAAqC,UAAA,SAAS,EAAER;AAAhD,UANF,EAOE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAEC;AAArC,UAPF;AAAA;AADF,MAFF;AAAA,IADF;AAgBD;AAED,IAAMQ,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\r\n\r\nimport InstructionPage from './src/screens/InstructionPage';\r\nimport Home from './src/screens/Home';\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <StatusBar style=\"dark\" />\r\n      <NavigationContainer>\r\n        <Stack.Navigator \r\n        screenOptions={({ route, navigation }) => ({\r\n          headerShown: false,\r\n          gestureEnabled: true,\r\n          ...TransitionPresets.ModalPresentationIOS,\r\n        })}>\r\n          <Stack.Screen name=\"InstructionPage\" component={InstructionPage} />\r\n          <Stack.Screen name=\"Home\" component={Home} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}